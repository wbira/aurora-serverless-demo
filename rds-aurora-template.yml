AWSTemplateFormatVersion: 2010-09-09
Parameters:
  DatabaseName:
    Type: String
    Description: The RDS Aurora Serverless Database Name
  MasterUserName:
    Type: String
    Description: The RDS Aurora Serverless Master UserName
  MasterUserPassword:
    Type: String
    Description: The RDS Aurora Serverless Master User Password
Resources:
  RDSAuroraServerlessCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      MasterUsername:
        Ref: MasterUserName
      MasterUserPassword:
        Ref: MasterUserPassword
      DatabaseName: 
        Ref: DatabaseName
      Engine: aurora
      EngineMode: serverless
      ScalingConfiguration:
        AutoPause: true
        MaxCapacity: 16
        MinCapacity: 2
        SecondsUntilAutoPause: 500
  RDSAuroraClusterMasterSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: RDSAuroraServerlessMasterSecret
      Description: This contains the RDS Master user credentials for RDS Aurora Serverless Cluster
      SecretString: 
        !Sub |
          {
            "username": "${MasterUserName}",
            "password": "${MasterUserPassword}"
          }
  RDSLambdaExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/" 
      Policies: 
        -
          PolicyName: "LambdaToCloudWatchLogs"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: 
                  - "logs:*"
                Resource: 
                  - arn:aws:logs:*:*:*
        - 
          PolicyName: "LambdaToRDSAuroraServerless"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: 
                  - "rds-data:BatchExecuteStatement"
                  - "rds-data:BeginTransaction"
                  - "rds-data:CommitTransaction"
                  - "rds-data:ExecuteStatement"
                  - "rds-data:RollbackTransaction"
                  - "tag:GetResources"
                  - "secretsmanager:GetRandomPassword"
                  - "secretsmanager:ListSecrets"
                  - "secretsmanager:CreateSecret"
                Resource: 
                  - !Join ['', ['arn:aws:rds:*:*:cluster:', !Ref RDSAuroraServerlessCluster]]
                  - !Join ['', ['arn:aws:rds:*:*:cluster:', !Ref RDSAuroraServerlessCluster, ':*']]
        - 
          PolicyName: "LambdaToAWSSecrets"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: 
                  - "secretsmanager:GetSecretValue"
                  - "secretsmanager:PutResourcePolicy"
                  - "secretsmanager:PutSecretValue"
                  - "secretsmanager:DeleteSecret"
                  - "secretsmanager:DescribeSecret"
                  - "secretsmanager:TagResource"
                Resource: 
                  - !Join ['', [!Ref RDSAuroraClusterMasterSecret]]
                  - !Join ['', [!Ref RDSAuroraClusterMasterSecret, ':*']]
  RDSAuroraServerlessDataAPIFunction:
    Type: "AWS::Lambda::Function"
    Properties: 
      Environment:
        Variables:
          DatabaseName: !Ref DatabaseName
          DBAuroraClusterArn: 
            !Join
              - ''
              -
                - !Sub 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:'
                - !Ref RDSAuroraServerlessCluster
          DBSecretsStoreArn: !Join ['', [!Ref RDSAuroraClusterMasterSecret]]
      Handler: "main.handler"
      Role: 
        Fn::GetAtt: 
          - "RDSLambdaExecutionRole"
          - "Arn"
      Code: 
        S3Bucket: "fraas-ota-aurora-serverless-example"
        S3Key: "rds-data-api-lambda-function.zip"
      Runtime: "python2.7"
      Timeout: 29
Outputs:
  DatabaseName:
    Value: !Ref DatabaseName
    Description: Aurora Serverless MySQL Database
  SecretsArn:
    Value: !Ref RDSAuroraClusterMasterSecret
    Description: AWS Secrets Arn 
  DBClusterArn:
    Value: !Join 
      - ''
      - - "arn:aws:rds:"
        - !Ref AWS::Region
        - ":"
        - !Ref AWS::AccountId
        - ":"
        - "cluster"
        - ":"
        - !Ref RDSAuroraServerlessCluster
    Description: AWS Secrets Arn